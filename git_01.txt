在现有目录中初始化仓库：git init

克隆仓库： git clone https://github.com/libgit2/libgit2

工作目录下的每一个文件都不外乎这两种状态：已跟踪或未跟踪。已跟踪的文件是指那些被纳入了版
本控制的文件，在上一次快照中有它们的记录，在工作一段时间后，它们的状态可能处于未修改，已修改或已放
入暂存区

检查当前文件状态 git status
  Changes to be committed 这行下面的，就说明是已暂存状态
  Changes not staged for commit 这行下面，说明已跟踪文件的内容发生了变化，但还没有放到暂存区
  git status -s(git status --short) 输出简单信息的文件状态
  
跟踪新文件 git add 
  git add 命令使用文件或目录的路径作为参数；如果参数是目录的路径，该命令将递归地跟踪该目录下的所有文件
  git add --all 跟踪所有文件
  git add 命令。这是个多功能命令：可以用它开始跟踪新文件，或者把已跟踪的文件放到暂存区，还能用于合并时把有冲突的文件标记为已解决状态等。将这个
  命令理解为“添加内容到下一次提交中”而不是“将一个文件添加到项目中”要更加合适

忽略文件 .gitignore  遵守glob模式规范

查看已暂存和未暂存的修改 git diff  git diff --staged

提交更新 git commit -m '你的提交注释' 
跳过使用暂存区域 git commit -a -m '你的提交注释'

移除文件： git rm  如果只是简单地从工作目录中手工删除文件，运行 git status 时就会在 “Changes not staged for
commit” 部分（也就是 未暂存清单）看到 ,然后再运行 git rm 记录此次移除文件的操作：

强制移除： git rm -f
  如果删除之前修改过并且已经放到暂存区域的话，则必须要用强
制删除选项 -f（译注：即 force 的首字母）。这是一种安全特性，用于防止误删还没有添加到快照的数据，这
样的数据不能被 Git 恢复。

移除git仓库中的文件，单保留工作目录中的文件 git rm --cached 

git rm 命令后面可以列出文件或者目录的名字，也可以使用 glob 模式
git rm log/\*.log

移动文件 git mv file_from file_to (如果强行修改文件名，会认为是删除旧文件添加新文件)

强制移除： git rm -f
  如果删除之前修改过并且已经放到暂存区域的话，则必须要用强
制删除选项 -f（译注：即 force 的首字母）。这是一种安全特性，用于防止误删还没有添加到快照的数据，这
样的数据不能被 Git 恢复。

移除git仓库中的文件，单保留工作目录中的文件 git rm --cached 

git rm 命令后面可以列出文件或者目录的名字，也可以使用 glob 模式
git rm log/\*.log

移动文件 git mv file_from file_to (如果强行修改文件名，会认为是删除旧文件添加新文件)

查看提交历史：git log 
  git log -p 显示修改细节
  git log -2 显示最近两次提交

撤销操作 
  重新提交 git commit --amend -m 'something'
  取消暂存的文件 git reset HEAD <file>

撤消对文件的修改
  git checkout -- [file]
  你需要知道 git checkout -- [file] 是一个危险的命令，这很重要。你对那个文
件做的任何修改都会消失 - 你只是拷贝了另一个文件来覆盖它。除非你确实清楚不想
要那个文件了，否则不要使用这个命令
  任何你未提交的东西丢失后很可能再也找不到
  了

远程仓库的使用

查看远程仓库


